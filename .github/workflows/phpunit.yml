---
name: PHPUnit
on:
  push:

jobs:
  test_php_82_and_newer:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php_version:
          - "8.3"
          - "8.2"
    steps:
      - uses: actions/checkout@v3
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php_version }}
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Update PHPUnit
        run: composer require phpunit/phpunit --dev -W
      - name: Install dependencies
        run: composer update
      - name: Validate dependencies
        run: composer validate
      - name: install Rector
        run: composer require rector/rector --dev -W
      - name: run Rector
        run: cd tests && ../vendor/bin/phpunit --migrate-configuration
        shell: bash
      - name: run Rector
        run: cd tests && ../vendor/bin/rector process .
        shell: bash
      - name: Run tests
        run: vendor/bin/phpunit --configuration tests/phpunit.xml
  test_php_81_and_lower:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php_version:
          - "8.1"
          - "8.0"
          - "7.4"
          - "7.3"
          - "7.2"
          - "7.1"
    steps:
      - uses: actions/checkout@v3
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php_version }}
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Update PHPUnit
        run: composer require phpunit/phpunit --dev -W
      - name: Install dependencies
        run: composer update
      - name: Validate dependencies
        run: composer validate
      - name: Run tests
        run: vendor/bin/phpunit --configuration tests/phpunit.xml
